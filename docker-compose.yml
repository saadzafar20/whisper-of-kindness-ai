
version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - VITE_API_URL=/api
    volumes:
      - /etc/letsencrypt/live/feelcalm.ai/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/feelcalm.ai/privkey.pem:/etc/nginx/ssl/privkey.pem:ro

  backend:
    build:
      context: ./backend-dotnet
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=feelcalm;User=dbuser;Password=dbpassword;
      - JWT__Secret=${JWT_SECRET}
      - JWT__ExpiryInDays=1
    # Expose the backend port 8080 internally for the frontend to connect to
    expose:
      - "8080"

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=feelcalm
      - MYSQL_USER=dbuser
      - MYSQL_PASSWORD=dbpassword
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "dbuser", "--password=dbpassword"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
